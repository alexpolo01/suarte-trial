{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "Suarte Backend API",
        "description": "API Documentation provided by Kainda"
    },
    "servers": [
        {
            "url": "https://dev.suarte.art",
            "description": "Development server"
        },
        {
            "url": "http://localhost:3000",
            "description": "Local server"
        }
    ],
    "tags": [],
    "components": {
        "schemas": {
            "ArtistRequest": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "format": "ObjectId",
                        "description": "MongoDB ObjectId",
                        "example": "507f1f77bcf86cd799439011",
                        "readOnly": true
                    }
                },
                "required": []
            },
            "Artlist": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "format": "ObjectId",
                        "description": "MongoDB ObjectId",
                        "example": "507f1f77bcf86cd799439011",
                        "readOnly": true
                    },
                    "artlist_creator": {
                        "type": "string",
                        "format": "ObjectId",
                        "description": "Id of the user who created the artlist, but can be an object containing more information about the user",
                        "example": "2354cbf7bcf86cd799439011",
                        "readOnly": true,
                        "required": true
                    },
                    "artlist_title": {
                        "type": "string",
                        "description": "Title of the artlist",
                        "example": "My artlist",
                        "required": true
                    },
                    "artlist_description": {
                        "type": "string",
                        "description": "Description of the artlist",
                        "example": "This is my artlist",
                        "required": false
                    },
                    "artlist_image": {
                        "type": "string",
                        "description": "Id of the Image representing the artlist",
                        "example": "64199afbaa70838bccbad996",
                        "required": false
                    },
                    "artlist_artworks": {
                        "type": "array",
                        "description": "Array of ids of artworks in the artlist, sometimes it can be an array of objects containing more information about the artworks",
                        "example": [
                            "507f1f77bcf86cd799439011",
                            "507f1f77bcf86cd799439012",
                            "507f1f77bcf86cd799439013"
                        ],
                        "required": false
                    },
                    "artlist_artwork_count": {
                        "type": "integer",
                        "description": "Number of artworks in the artlist",
                        "example": 3,
                        "required": false
                    }
                },
                "required": []
            },
            "Artwork": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "format": "ObjectId",
                        "description": "MongoDB ObjectId",
                        "example": "507f1f77bcf86cd799439011",
                        "readOnly": true
                    }
                },
                "required": []
            },
            "ChatMessage": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "format": "ObjectId",
                        "description": "MongoDB ObjectId",
                        "example": "507f1f77bcf86cd799439011",
                        "readOnly": true
                    }
                },
                "required": []
            },
            "Contact": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "format": "ObjectId",
                        "description": "MongoDB ObjectId",
                        "example": "507f1f77bcf86cd799439011",
                        "readOnly": true
                    }
                },
                "required": []
            },
            "Draft": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "format": "ObjectId",
                        "description": "MongoDB ObjectId",
                        "example": "507f1f77bcf86cd799439011",
                        "readOnly": true
                    }
                },
                "required": []
            },
            "GalleryArtist": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "format": "ObjectId",
                        "description": "MongoDB ObjectId",
                        "example": "507f1f77bcf86cd799439011",
                        "readOnly": true
                    }
                },
                "required": []
            },
            "GalleryRequest": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "format": "ObjectId",
                        "description": "MongoDB ObjectId",
                        "example": "507f1f77bcf86cd799439011",
                        "readOnly": true
                    }
                },
                "required": []
            },
            "InternalCollection": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "format": "ObjectId",
                        "description": "MongoDB ObjectId",
                        "example": "507f1f77bcf86cd799439011",
                        "readOnly": true
                    }
                },
                "required": []
            },
            "Invoice": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "format": "ObjectId",
                        "description": "MongoDB ObjectId",
                        "example": "507f1f77bcf86cd799439011",
                        "readOnly": true
                    }
                },
                "required": []
            },
            "Order": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "format": "ObjectId",
                        "description": "MongoDB ObjectId",
                        "example": "507f1f77bcf86cd799439011",
                        "readOnly": true
                    }
                },
                "required": []
            },
            "Post": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "format": "ObjectId",
                        "description": "MongoDB ObjectId",
                        "example": "507f1f77bcf86cd799439011",
                        "readOnly": true
                    }
                },
                "required": []
            },
            "Product": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "format": "ObjectId",
                        "description": "MongoDB ObjectId",
                        "example": "507f1f77bcf86cd799439011",
                        "readOnly": true
                    }
                },
                "required": []
            },
            "Rating": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "format": "ObjectId",
                        "description": "MongoDB ObjectId",
                        "example": "507f1f77bcf86cd799439011",
                        "readOnly": true
                    }
                },
                "required": []
            },
            "Review": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "format": "ObjectId",
                        "description": "MongoDB ObjectId",
                        "example": "507f1f77bcf86cd799439011",
                        "readOnly": true
                    }
                },
                "required": []
            },
            "EmailList": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "format": "ObjectId",
                        "description": "MongoDB ObjectId",
                        "example": "507f1f77bcf86cd799439011",
                        "readOnly": true
                    }
                },
                "required": []
            },
            "LandingTracking": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "format": "ObjectId",
                        "description": "MongoDB ObjectId",
                        "example": "507f1f77bcf86cd799439011",
                        "readOnly": true
                    }
                },
                "required": []
            },
            "Thought": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "format": "ObjectId",
                        "description": "MongoDB ObjectId",
                        "example": "507f1f77bcf86cd799439011",
                        "readOnly": true
                    }
                },
                "required": []
            },
            "User": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "MongoDB ObjectId",
                        "example": "n2zqKGqUAOPp4pek9T5VyT3QVRi1",
                        "readOnly": true
                    }
                },
                "required": []
            }
        },
        "parameters": {
            "MongoId": {
                "name": "id",
                "in": "path",
                "description": "Mongo Id",
                "required": true,
                "schema": {
                    "type": "string",
                    "format": "ObjectId",
                    "example": "5e9b9b9b9b9b9b9b9b9b9b9b"
                }
            },
            "UserId": {
                "name": "user_id",
                "in": "path",
                "description": "String representing the Firebase user id as well as the user id in the database",
                "required": true,
                "schema": {
                    "type": "string",
                    "example": "n2zqKGqUAOPp4pek9T5VyT3QVRi1"
                }
            },
            "Offset": {
                "name": "offset",
                "in": "query",
                "description": "Number of items to skip",
                "required": false,
                "schema": {
                    "type": "integer",
                    "default": 0
                }
            },
            "Limit": {
                "name": "limit",
                "in": "query",
                "description": "Maximum number of records to return. 0 to return all records.",
                "required": false,
                "schema": {
                    "type": "integer",
                    "default": 10
                }
            },
            "Sort": {
                "name": "sort",
                "in": "query",
                "description": "Sort order. Format: field_name,asc|desc",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "ArtlistIdParam": {
                "name": "artlist_id",
                "in": "path",
                "description": "Id of the artlist",
                "required": true,
                "schema": {
                    "type": "string",
                    "format": "ObjectId",
                    "example": "5e9b9b9b9b9b9b9b9b9b9b9b"
                }
            }
        },
        "responses": {
            "ValidationError": {
                "description": "Validation error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error_type": {
                                    "type": "string",
                                    "example": "VALIDATION_ERROR"
                                },
                                "error_message": {
                                    "type": "string",
                                    "example": "Validation error"
                                },
                                "error_data": {
                                    "type": "object",
                                    "properties": {
                                        "field_name": {
                                            "type": "string",
                                            "example": "This field is required"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "UnauthorizedError": {
                "description": "Invalid or missing token",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error_type": {
                                    "type": "string",
                                    "example": "UNAUTHORIZED"
                                },
                                "error_message": {
                                    "type": "string",
                                    "example": "Invalid or missing token"
                                },
                                "error_data": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "ForbiddenError": {
                "description": "Forbidden",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error_type": {
                                    "type": "string",
                                    "example": "FORBIDDEN"
                                },
                                "error_message": {
                                    "type": "string",
                                    "example": "You don't have permission to access this resource"
                                },
                                "error_data": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "NotFoundError": {
                "description": "Not found",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error_type": {
                                    "type": "string",
                                    "example": "NOT_FOUND"
                                },
                                "error_message": {
                                    "type": "string",
                                    "example": "The resource you are looking for does not exist"
                                },
                                "error_data": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "ConflictError": {
                "description": "Conflict",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error_type": {
                                    "type": "string",
                                    "example": "CONFLICT"
                                },
                                "error_message": {
                                    "type": "string",
                                    "example": "The resource you are trying to create already exists"
                                },
                                "error_data": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "TooManyRequestsError": {
                "description": "Too many requests",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error_type": {
                                    "type": "string",
                                    "example": "TOO_MANY_REQUESTS"
                                },
                                "error_message": {
                                    "type": "string",
                                    "example": "Too many requests"
                                },
                                "error_data": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "InternalServerError": {
                "description": "Internal server error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error_type": {
                                    "type": "string",
                                    "example": "INTERNAL_SERVER_ERROR"
                                },
                                "error_message": {
                                    "type": "string",
                                    "example": "Internal server error"
                                },
                                "error_data": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "examples": {
            "ArtistRequest": {
                "value": {
                    "_id": "507f1f77bcf86cd799439011"
                }
            },
            "Artlist": {
                "value": {
                    "_id": "507f1f77bcf86cd799439011",
                    "artlist_creator": "2354cbf7bcf86cd799439011",
                    "artlist_title": "My artlist",
                    "artlist_description": "This is my artlist",
                    "artlist_image": "https://www.example.com/image.jpg",
                    "artlist_artworks": [
                        "507f1f77bcf86cd799439011",
                        "507f1f77bcf86cd799439012",
                        "507f1f77bcf86cd799439013"
                    ],
                    "artlist_artwork_count": 3
                }
            },
            "Artwork": {
                "value": {
                    "_id": "507f1f77bcf86cd799439011"
                }
            },
            "ChatMessage": {
                "value": {
                    "_id": "507f1f77bcf86cd799439011"
                }
            },
            "Contact": {
                "value": {
                    "_id": "507f1f77bcf86cd799439011"
                }
            },
            "Draft": {
                "value": {
                    "_id": "507f1f77bcf86cd799439011"
                }
            },
            "GalleryArtist": {
                "value": {
                    "_id": "507f1f77bcf86cd799439011"
                }
            },
            "GalleryRequest": {
                "value": {
                    "_id": "507f1f77bcf86cd799439011"
                }
            },
            "InternalCollection": {
                "value": {
                    "_id": "507f1f77bcf86cd799439011"
                }
            },
            "Invoice": {
                "value": {
                    "_id": "507f1f77bcf86cd799439011"
                }
            },
            "Order": {
                "value": {
                    "_id": "507f1f77bcf86cd799439011"
                }
            },
            "Post": {
                "value": {
                    "_id": "507f1f77bcf86cd799439011"
                }
            },
            "Product": {
                "value": {
                    "_id": "507f1f77bcf86cd799439011"
                }
            },
            "Rating": {
                "value": {
                    "_id": "507f1f77bcf86cd799439011"
                }
            },
            "Review": {
                "value": {
                    "_id": "507f1f77bcf86cd799439011"
                }
            },
            "EmailList": {
                "value": {
                    "_id": "507f1f77bcf86cd799439011"
                }
            },
            "LandingTracking": {
                "value": {
                    "_id": "507f1f77bcf86cd799439011"
                }
            },
            "Thought": {
                "value": {
                    "_id": "507f1f77bcf86cd799439011"
                }
            },
            "User": {
                "value": {
                    "_id": "n2zqKGqUAOPp4pek9T5VyT3QVRi1"
                }
            }
        },
        "requestBodies": {},
        "headers": {},
        "links": {},
        "callbacks": {}
    },
    "paths": {
        "/login/idtoken": {
            "post": {
                "summary": "This operation lets you obtain a token from a user registered with email and with the only purpose of using it on endpoints in the documentation.",
                "operationId": "loginIdToken",
                "tags": [
                    "Login"
                ],
                "requestBody": {
                    "description": "The user email (or username) and password to login",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_email": {
                                        "type": "string",
                                        "description": "User email",
                                        "example": "collector@dev.suarte.art"
                                    },
                                    "user_password": {
                                        "type": "string",
                                        "description": "User password",
                                        "example": "123456"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean",
                                            "description": "Authentication result. Might be removed in the future, so don't rely on it",
                                            "example": true
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "The token to be used in the Authorize button in the top right corner of this page",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJTdWFydGUgQXBwIiwiaWF0IjoxNTkxNjQwNjYyLCJleHAiOjE1OTE2NDQyNjIsImF1ZCI6Imh0dHBzOi8vZGV2LnN1YXJ0ZS5hcnQiLCJzdWIiOiJjb2xsZWN0b3JAZGV2LnN1YXJ0ZS5hcnQiLCJ1c2VyX2lkIjoiY29sbGVjdG9yQG"
                                        },
                                        "user_session": {
                                            "type": "object",
                                            "description": "All the necessary information about the user to fasten the app experience. Note that this example is not complete, it only shows the user id",
                                            "properties": {
                                                "_id": {
                                                    "type": "string",
                                                    "description": "User id",
                                                    "example": "5e9f1a0a1c9d440000d1f1a0"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/request/access/artist/": {},
        "/request/access/artist/{artistrequest_id}/": {},
        "/artlist/": {
            "post": {
                "summary": "Create a new artlist",
                "operationId": "createArtlist",
                "tags": [
                    "Artlists"
                ],
                "requestBody": {
                    "description": "Artlist object to be created. It must contain an artlist_name but the rest of the fields are optional",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Artlist"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Artlist created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Artlist"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/artlist/username/{user_username}": {
            "get": {
                "summary": "Get all artlists by username",
                "operationId": "getAllArtlistsByUsername",
                "tags": [
                    "Artlists"
                ],
                "parameters": [
                    {
                        "name": "user_username",
                        "in": "path",
                        "description": "Username of the user whose artlists are to be retrieved",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "collector"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/Offset"
                    },
                    {
                        "$ref": "#/components/parameters/Limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of artlists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Artlist"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/artlist/{artlist_id}/": {
            "get": {
                "summary": "Get a artlist by id",
                "operationId": "getArtlistById",
                "tags": [
                    "Artlists"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ArtlistIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Artlist found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Artlist"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "put": {
                "summary": "Update a artlist by id",
                "operationId": "updateArtlist",
                "tags": [
                    "Artlists"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ArtlistIdParam"
                    }
                ],
                "requestBody": {
                    "description": "Artlist object to be updated, it consists of the same properties as the Artlist model, but also adds or removes artworks from the artlist if the corresponding arrays are present. Non-updatable properties will be ignored and repeated artworks will be ignored.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Artlist"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "artworks_add": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "description": "MongoId of the artwork to be added to the artlist",
                                                    "example": "5f8d0b2c8b0d8f0017a0b0b0"
                                                }
                                            },
                                            "artworks_remove": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "description": "MongoId of the artwork to be removed from the artlist",
                                                    "example": "5f8d0b2c8b0d8f0017a0b0b0"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Artlist updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Artlist"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete a artlist by id",
                "operationId": "deleteArtlist",
                "tags": [
                    "Artlists"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ArtlistIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Artlist deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Artlist"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/artlist/like": {
            "post": {
                "summary": "Like a Artlist",
                "operationId": "likeArtlist",
                "tags": [
                    "Artlists",
                    "Likes"
                ],
                "requestBody": {
                    "description": "Id of the artlist to be liked",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "artlist_id": {
                                        "type": "string",
                                        "description": "Id of the artlist to be unliked",
                                        "example": "5f7f5c3b9b3f2b1b7c6d4b1a"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Artlist liked successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "artlist": {
                                            "$ref": "#/components/schemas/MongoId"
                                        },
                                        "user": {
                                            "type": "string",
                                            "description": "Id of the user that liked the artlist",
                                            "example": "5f7f5c3b9b3f2b1b7c6d4b1a"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/artlist/unlike": {
            "post": {
                "summary": "Unlike a Artlist",
                "operationId": "unlikeArtlist",
                "tags": [
                    "Artlists",
                    "Likes"
                ],
                "requestBody": {
                    "description": "Id of the artlist to be unliked",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "artlist_id": {
                                        "type": "string",
                                        "description": "Id of the artlist to be unliked",
                                        "example": "5f7f5c3b9b3f2b1b7c6d4b1a"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Artlist unliked successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "artlist": {
                                            "$ref": "#/components/schemas/MongoId"
                                        },
                                        "user": {
                                            "type": "string",
                                            "description": "Id of the user that liked the artlist",
                                            "example": "5f7f5c3b9b3f2b1b7c6d4b1a"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/artwork/": {},
        "/artwork/{artwork_id}/": {},
        "/chatmessage/": {
            "post": {
                "summary": "Create a new chatmessage",
                "operationId": "createChatMessage",
                "tags": [
                    "ChatMessages"
                ],
                "requestBody": {
                    "description": "ChatMessage object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatMessage"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "ChatMessage created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChatMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "409": {
                        "$ref": "#/components/responses/ConflictError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "get": {
                "summary": "Get all chatmessages",
                "operationId": "getAllChatMessages",
                "tags": [
                    "ChatMessages"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Offset"
                    },
                    {
                        "$ref": "#/components/parameters/Limit"
                    },
                    {
                        "$ref": "#/components/parameters/Sort"
                    },
                    {
                        "description": "TODO: Define filter parameters for ChatMessage"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of chatmessages",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ChatMessage"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/chatmessage/{chatmessage_id}/": {
            "get": {
                "summary": "Get a chatmessage by id",
                "operationId": "getChatMessageById",
                "tags": [
                    "ChatMessages"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/MongoId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ChatMessage found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChatMessage"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "summary": "Update a chatmessage by id",
                "operationId": "updateChatMessage",
                "tags": [
                    "ChatMessages"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/MongoId"
                    }
                ],
                "requestBody": {
                    "description": "ChatMessage object to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatMessage"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ChatMessage updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChatMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete a chatmessage by id",
                "operationId": "deleteChatMessage",
                "tags": [
                    "ChatMessages"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/MongoId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ChatMessage deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChatMessage"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/contact/": {},
        "/contact/{contact_id}/": {},
        "/draft/": {},
        "/draft/{draft_id}/": {},
        "/galleryartist/": {},
        "/galleryartist/{galleryartist_id}/": {},
        "/galleryrequest/": {},
        "/galleryrequest/{galleryrequest_id}/": {},
        "/internalcollection/": {
            "post": {
                "summary": "Create a new internalcollection",
                "operationId": "createInternalCollection",
                "tags": [
                    "InternalCollections"
                ],
                "requestBody": {
                    "description": "InternalCollection object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InternalCollection"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "InternalCollection created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalCollection"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "409": {
                        "$ref": "#/components/responses/ConflictError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "get": {
                "summary": "Get all internalcollections",
                "operationId": "getAllInternalCollections",
                "tags": [
                    "InternalCollections"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Offset"
                    },
                    {
                        "$ref": "#/components/parameters/Limit"
                    },
                    {
                        "$ref": "#/components/parameters/Sort"
                    },
                    {
                        "description": "TODO: Define filter parameters for InternalCollection"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of internalcollections",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/InternalCollection"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/internalcollection/{internalcollection_id}/": {
            "get": {
                "summary": "Get a internalcollection by id",
                "operationId": "getInternalCollectionById",
                "tags": [
                    "InternalCollections"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/MongoId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "InternalCollection found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "summary": "Update a internalcollection by id",
                "operationId": "updateInternalCollection",
                "tags": [
                    "InternalCollections"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/MongoId"
                    }
                ],
                "requestBody": {
                    "description": "InternalCollection object to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InternalCollection"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "InternalCollection updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalCollection"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete a internalcollection by id",
                "operationId": "deleteInternalCollection",
                "tags": [
                    "InternalCollections"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/MongoId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "InternalCollection deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/invoice/": {
            "post": {
                "summary": "Create a new invoice",
                "operationId": "createInvoice",
                "tags": [
                    "Invoices"
                ],
                "requestBody": {
                    "description": "Invoice object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Invoice"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Invoice created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invoice"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "409": {
                        "$ref": "#/components/responses/ConflictError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "get": {
                "summary": "Get all invoices",
                "operationId": "getAllInvoices",
                "tags": [
                    "Invoices"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Offset"
                    },
                    {
                        "$ref": "#/components/parameters/Limit"
                    },
                    {
                        "$ref": "#/components/parameters/Sort"
                    },
                    {
                        "description": "TODO: Define filter parameters for Invoice"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of invoices",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Invoice"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/invoice/{invoice_id}/": {
            "get": {
                "summary": "Get a invoice by id",
                "operationId": "getInvoiceById",
                "tags": [
                    "Invoices"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/MongoId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoice found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invoice"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "summary": "Update a invoice by id",
                "operationId": "updateInvoice",
                "tags": [
                    "Invoices"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/MongoId"
                    }
                ],
                "requestBody": {
                    "description": "Invoice object to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Invoice"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Invoice updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invoice"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete a invoice by id",
                "operationId": "deleteInvoice",
                "tags": [
                    "Invoices"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/MongoId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoice deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invoice"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/": {
            "post": {
                "summary": "Create a new order",
                "operationId": "createOrder",
                "tags": [
                    "Orders"
                ],
                "requestBody": {
                    "description": "Order object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Order"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Order created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "409": {
                        "$ref": "#/components/responses/ConflictError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "get": {
                "summary": "Get all orders",
                "operationId": "getAllOrders",
                "tags": [
                    "Orders"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Offset"
                    },
                    {
                        "$ref": "#/components/parameters/Limit"
                    },
                    {
                        "$ref": "#/components/parameters/Sort"
                    },
                    {
                        "description": "TODO: Define filter parameters for Order"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of orders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Order"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/{order_id}/": {
            "get": {
                "summary": "Get a order by id",
                "operationId": "getOrderById",
                "tags": [
                    "Orders"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/MongoId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "summary": "Update a order by id",
                "operationId": "updateOrder",
                "tags": [
                    "Orders"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/MongoId"
                    }
                ],
                "requestBody": {
                    "description": "Order object to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Order"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete a order by id",
                "operationId": "deleteOrder",
                "tags": [
                    "Orders"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/MongoId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/post/": {
            "post": {
                "summary": "Create a new post",
                "operationId": "createPost",
                "tags": [
                    "Posts"
                ],
                "requestBody": {
                    "description": "Post object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Post"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Post created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "409": {
                        "$ref": "#/components/responses/ConflictError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "get": {
                "summary": "Get all posts",
                "operationId": "getAllPosts",
                "tags": [
                    "Posts"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Offset"
                    },
                    {
                        "$ref": "#/components/parameters/Limit"
                    },
                    {
                        "$ref": "#/components/parameters/Sort"
                    },
                    {
                        "description": "TODO: Define filter parameters for Post"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of posts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Post"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/post/{post_id}/": {
            "get": {
                "summary": "Get a post by id",
                "operationId": "getPostById",
                "tags": [
                    "Posts"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/MongoId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "summary": "Update a post by id",
                "operationId": "updatePost",
                "tags": [
                    "Posts"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/MongoId"
                    }
                ],
                "requestBody": {
                    "description": "Post object to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Post"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Post updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete a post by id",
                "operationId": "deletePost",
                "tags": [
                    "Posts"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/MongoId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/product/": {
            "post": {
                "summary": "Create a new product",
                "operationId": "createProduct",
                "tags": [
                    "Products"
                ],
                "requestBody": {
                    "description": "Product object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "409": {
                        "$ref": "#/components/responses/ConflictError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "get": {
                "summary": "Get all products",
                "operationId": "getAllProducts",
                "tags": [
                    "Products"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Offset"
                    },
                    {
                        "$ref": "#/components/parameters/Limit"
                    },
                    {
                        "$ref": "#/components/parameters/Sort"
                    },
                    {
                        "description": "TODO: Define filter parameters for Product"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/product/{product_id}/": {
            "get": {
                "summary": "Get a product by id",
                "operationId": "getProductById",
                "tags": [
                    "Products"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/MongoId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "summary": "Update a product by id",
                "operationId": "updateProduct",
                "tags": [
                    "Products"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/MongoId"
                    }
                ],
                "requestBody": {
                    "description": "Product object to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete a product by id",
                "operationId": "deleteProduct",
                "tags": [
                    "Products"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/MongoId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/rating/": {
            "post": {
                "summary": "Create a new rating",
                "operationId": "createRating",
                "tags": [
                    "Ratings"
                ],
                "requestBody": {
                    "description": "Rating object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Rating"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Rating created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rating"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "409": {
                        "$ref": "#/components/responses/ConflictError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "get": {
                "summary": "Get all ratings",
                "operationId": "getAllRatings",
                "tags": [
                    "Ratings"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Offset"
                    },
                    {
                        "$ref": "#/components/parameters/Limit"
                    },
                    {
                        "$ref": "#/components/parameters/Sort"
                    },
                    {
                        "description": "TODO: Define filter parameters for Rating"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ratings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Rating"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/rating/{rating_id}/": {
            "get": {
                "summary": "Get a rating by id",
                "operationId": "getRatingById",
                "tags": [
                    "Ratings"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/MongoId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rating found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rating"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "summary": "Update a rating by id",
                "operationId": "updateRating",
                "tags": [
                    "Ratings"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/MongoId"
                    }
                ],
                "requestBody": {
                    "description": "Rating object to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Rating"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Rating updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rating"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete a rating by id",
                "operationId": "deleteRating",
                "tags": [
                    "Ratings"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/MongoId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rating deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rating"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review/": {
            "post": {
                "summary": "Create a new review",
                "operationId": "createReview",
                "tags": [
                    "Reviews"
                ],
                "requestBody": {
                    "description": "Review object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Review"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Review created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Review"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "409": {
                        "$ref": "#/components/responses/ConflictError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "get": {
                "summary": "Get all reviews",
                "operationId": "getAllReviews",
                "tags": [
                    "Reviews"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Offset"
                    },
                    {
                        "$ref": "#/components/parameters/Limit"
                    },
                    {
                        "$ref": "#/components/parameters/Sort"
                    },
                    {
                        "description": "TODO: Define filter parameters for Review"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of reviews",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Review"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review/{review_id}/": {
            "get": {
                "summary": "Get a review by id",
                "operationId": "getReviewById",
                "tags": [
                    "Reviews"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/MongoId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Review found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Review"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "summary": "Update a review by id",
                "operationId": "updateReview",
                "tags": [
                    "Reviews"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/MongoId"
                    }
                ],
                "requestBody": {
                    "description": "Review object to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Review"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Review updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Review"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete a review by id",
                "operationId": "deleteReview",
                "tags": [
                    "Reviews"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/MongoId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Review deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Review"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/emaillist/": {
            "post": {
                "summary": "Create a new emaillist",
                "operationId": "createEmailList",
                "tags": [
                    "EmailLists"
                ],
                "requestBody": {
                    "description": "EmailList object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailList"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "EmailList created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmailList"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "409": {
                        "$ref": "#/components/responses/ConflictError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "get": {
                "summary": "Get all emaillists",
                "operationId": "getAllEmailLists",
                "tags": [
                    "EmailLists"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Offset"
                    },
                    {
                        "$ref": "#/components/parameters/Limit"
                    },
                    {
                        "$ref": "#/components/parameters/Sort"
                    },
                    {
                        "description": "TODO: Define filter parameters for EmailList"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of emaillists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EmailList"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/emaillist/{emaillist_id}/": {
            "get": {
                "summary": "Get a emaillist by id",
                "operationId": "getEmailListById",
                "tags": [
                    "EmailLists"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/MongoId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "EmailList found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmailList"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/landingtracking/": {
            "post": {
                "summary": "Create a new landingtracking",
                "operationId": "createLandingTracking",
                "tags": [
                    "LandingTrackings"
                ],
                "requestBody": {
                    "description": "LandingTracking object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LandingTracking"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "LandingTracking created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LandingTracking"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "409": {
                        "$ref": "#/components/responses/ConflictError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "get": {
                "summary": "Get all landingtrackings",
                "operationId": "getAllLandingTrackings",
                "tags": [
                    "LandingTrackings"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Offset"
                    },
                    {
                        "$ref": "#/components/parameters/Limit"
                    },
                    {
                        "$ref": "#/components/parameters/Sort"
                    },
                    {
                        "description": "TODO: Define filter parameters for LandingTracking"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of landingtrackings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LandingTracking"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/landingtracking/{landingtracking_id}/": {
            "get": {
                "summary": "Get a landingtracking by id",
                "operationId": "getLandingTrackingById",
                "tags": [
                    "LandingTrackings"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/MongoId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "LandingTracking found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LandingTracking"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/thought/": {
            "post": {
                "summary": "Create a new thought",
                "operationId": "createThought",
                "tags": [
                    "Thoughts"
                ],
                "requestBody": {
                    "description": "Thought object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Thought"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Thought created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Thought"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "409": {
                        "$ref": "#/components/responses/ConflictError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "get": {
                "summary": "Get all thoughts",
                "operationId": "getAllThoughts",
                "tags": [
                    "Thoughts"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Offset"
                    },
                    {
                        "$ref": "#/components/parameters/Limit"
                    },
                    {
                        "$ref": "#/components/parameters/Sort"
                    },
                    {
                        "description": "TODO: Define filter parameters for Thought"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of thoughts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Thought"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/thought/{thought_id}/": {
            "get": {
                "summary": "Get a thought by id",
                "operationId": "getThoughtById",
                "tags": [
                    "Thoughts"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/MongoId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Thought found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Thought"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "summary": "Update a thought by id",
                "operationId": "updateThought",
                "tags": [
                    "Thoughts"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/MongoId"
                    }
                ],
                "requestBody": {
                    "description": "Thought object to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Thought"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Thought updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Thought"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete a thought by id",
                "operationId": "deleteThought",
                "tags": [
                    "Thoughts"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/MongoId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Thought deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Thought"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/": {},
        "/user/{user_id}/": {},
        "/user/follow": {
            "post": {
                "summary": "Follow a user",
                "operationId": "followUser",
                "tags": [
                    "Users",
                    "Follow"
                ],
                "requestBody": {
                    "description": "Id of the user to be followed",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "followee_id": {
                                        "type": "string",
                                        "example": "n2zqKGqUAOPp4pek9T5VyT3QVRi1"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User followed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "follower": {
                                            "schema": {
                                                "type": "string",
                                                "example": "n2zqKGqUAOPp4pek9T5VyT3QVRi1"
                                            }
                                        },
                                        "followee": {
                                            "schema": {
                                                "type": "string",
                                                "example": "n2zqKGqUAOPp4pek9T5VyT3QVRi1"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/unfollow": {
            "post": {
                "summary": "Unfollow a user",
                "operationId": "unfollowUser",
                "tags": [
                    "Users",
                    "Follow"
                ],
                "requestBody": {
                    "description": "Id of the user to be unfollowed",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "followee_id": {
                                        "type": "string",
                                        "example": "n2zqKGqUAOPp4pek9T5VyT3QVRi1"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User unfollowed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "follower": {
                                            "schema": {
                                                "type": "string",
                                                "example": "n2zqKGqUAOPp4pek9T5VyT3QVRi1"
                                            }
                                        },
                                        "followee": {
                                            "schema": {
                                                "type": "string",
                                                "example": "n2zqKGqUAOPp4pek9T5VyT3QVRi1"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/followers/{user_id}": {
            "get": {
                "summary": "Get followers of a user",
                "operationId": "getFollowers",
                "tags": [
                    "Users",
                    "Follow"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/UserId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful, even if no followers are found or the user does not exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User",
                                        "is_following_me": {
                                            "type": "boolean"
                                        },
                                        "im_following": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/followees/{user_id}": {
            "get": {
                "summary": "Get followees by me",
                "operationId": "getFollowee",
                "tags": [
                    "Users",
                    "Follow"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/UserId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful, even if no followees are found or the user does not exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User",
                                        "is_following_me": {
                                            "type": "boolean"
                                        },
                                        "im_following": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequestsError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    }
}